[project]
name = "collectivecrossing"
version = "0.1.0"
description = "A new project"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
dependencies = [
    "gymnasium>=0.29.0",
    "numpy>=1.24.0",
    "ray[rllib]==2.48.0",
    "matplotlib>=3.7.0",
    "pydantic>=2.11.7",
]
requires-python = ">=3.10,<3.14"
readme = "README.md"

[tool.hatch.build.targets.wheel]
packages = ["src/collectivecrossing"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pre-commit>=3.5.0",
    "ruff>=0.1.6",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src/collectivecrossing",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml",
    "--cov-fail-under=70",
]

[tool.coverage.run]
source = ["src/collectivecrossing"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
